apiVersion: argoproj.io/v1alpha1

kind: Application

metadata:
  name: keycloak # https://github.com/bitnami/charts/blob/main/bitnami/keycloak/values.yaml
  namespace: argo

spec:
  project: default

  source:
    path: ''
    repoURL: 'https://charts.bitnami.com/bitnami/'
    targetRevision: '22.1.2'
    chart: keycloak
    helm:
#      #Notice: ArgoCD way to pass parameters
#      parameters:
#        - name: ....
#          value: ...
      #Notice: Helm way to pass parameters
      values: |
        auth:
          adminUser: admin
          adminPassword: admin

        postgresql:
          enabled: false 

        externalDatabase:
          host: postgres-postgresql.database.svc.cluster.local
          user: postgres
          password: postgres 
          database: postgres
          port: 5432

        configuration:
          realm.json: |
            {
              "realm": "exampleRealm",
              "enabled": "true",
              "registrationAllowed": false,
              "roles": {
                "realm": [
                  {  
                    "name": "adminRole",
                    "composite": false,
                    "clientRole": false
                  },
                  {
                    "name": "userRole",
                    "composite": false,
                    "clientRole": false
                  }
                ]
              },
              "users": [
                {
                  "username": "johnDoe",
                  "email": "john.doe@example.com",
                  "enabled": true,
                  "firstName": "John",
                  "lastName": "Doe",
                  "realmRoles": [
                    "userRole"
                  ],
                  "credentials": [
                    {
                      "type": "password",
                      "value": "securePassword123"
                    }
                  ]
                }
              ],
              "clients": [
                {
                  "clientId": "exampleClient",
                  "directAccessGrantsEnabled": true,
                  "redirectUris": ["http://example.com/callback"],
                  "webOrigins": ["http://example.com"],
                  "bearerOnly": false,
                  "rootUrl": "http://example.com",
                  "adminUrl": "http://example.com/admin"
                }
              ]
            }

  destination:
    namespace: identity
    server: https://kubernetes.default.svc

  syncPolicy:
    automated:
      prune: false
      selfHeal: false